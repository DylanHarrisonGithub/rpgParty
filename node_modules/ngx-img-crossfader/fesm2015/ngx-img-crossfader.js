import { Component, Input, ViewChild, NgModule } from '@angular/core';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgxImgCrossfaderComponent {
    constructor() {
        this.initDelayMS = 0;
        this.idleTimeMS = 5000;
        this.transitionTimeMS = 1000;
        this.autoAdvance = true;
        this.imageSources = [];
        this.backgroundColor = 'rgba(0,0,0,1.0)';
        this.img1Num = 0;
        this.img2Num = 1;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.div = (/** @type {?} */ (this.bkgCrossfaderDiv.nativeElement));
        this.img1 = (/** @type {?} */ (this.bkgCrossfaderImg1.nativeElement));
        this.img2 = (/** @type {?} */ (this.bkgCrossfaderImg2.nativeElement));
        this.div.style.backgroundColor = this.backgroundColor;
        this.img1.style.transitionDuration = this.transitionTimeMS.toString() + 'ms';
        this.img1.style.webkitTransitionDuration = this.transitionTimeMS.toString() + 'ms';
        this.img2.style.transitionDuration = this.transitionTimeMS.toString() + 'ms';
        this.img2.style.webkitTransitionDuration = this.transitionTimeMS.toString() + 'ms';
        setTimeout((/**
         * @return {?}
         */
        () => {
            this.idle();
        }), this.initDelayMS);
    }
    /**
     * @private
     * @return {?}
     */
    idle() {
        setTimeout((/**
         * @return {?}
         */
        () => {
            if (this.autoAdvance) {
                this.transition();
            }
            else {
                this.idle();
            }
        }), this.idleTimeMS);
    }
    /**
     * @private
     * @return {?}
     */
    transition() {
        if (this.imageSources.length > 1) {
            if (this.img1.classList.contains('ngx-img-crossfader-transparent')) {
                this.img1Num = (this.img2Num + 1) % this.imageSources.length;
            }
            else {
                this.img2Num = (this.img1Num + 1) % this.imageSources.length;
            }
            this.img1.style.transitionDuration = this.transitionTimeMS.toString() + 'ms';
            this.img1.style.webkitTransitionDuration = this.transitionTimeMS.toString() + 'ms';
            this.img2.style.transitionDuration = this.transitionTimeMS.toString() + 'ms';
            this.img2.style.webkitTransitionDuration = this.transitionTimeMS.toString() + 'ms';
            this.img1.classList.toggle('ngx-img-crossfader-transparent');
            this.img2.classList.toggle('ngx-img-crossfader-transparent');
            setTimeout((/**
             * @return {?}
             */
            () => {
                this.idle();
            }), this.transitionTimeMS);
        }
    }
    /**
     * @return {?}
     */
    stepForward() {
        if (this.imageSources.length > 1) {
            if (this.img1.classList.contains('ngx-img-crossfader-transparent')) {
                this.img1Num = (this.img2Num + 1) % this.imageSources.length;
            }
            else {
                this.img2Num = (this.img1Num + 1) % this.imageSources.length;
            }
            this.img1.style.transitionDuration = this.transitionTimeMS.toString() + 'ms';
            this.img1.style.webkitTransitionDuration = this.transitionTimeMS.toString() + 'ms';
            this.img2.style.transitionDuration = this.transitionTimeMS.toString() + 'ms';
            this.img2.style.webkitTransitionDuration = this.transitionTimeMS.toString() + 'ms';
            this.img1.classList.toggle('ngx-img-crossfader-transparent');
            this.img2.classList.toggle('ngx-img-crossfader-transparent');
        }
    }
    /**
     * @return {?}
     */
    stepBackward() {
        if (this.imageSources.length > 1) {
            if (this.img1.classList.contains('ngx-img-crossfader-transparent')) {
                this.img1Num = (this.img2Num - 1 + this.imageSources.length) % this.imageSources.length;
            }
            else {
                this.img2Num = (this.img1Num - 1 + this.imageSources.length) % this.imageSources.length;
            }
            this.img1.style.transitionDuration = this.transitionTimeMS.toString() + 'ms';
            this.img1.style.webkitTransitionDuration = this.transitionTimeMS.toString() + 'ms';
            this.img2.style.transitionDuration = this.transitionTimeMS.toString() + 'ms';
            this.img2.style.webkitTransitionDuration = this.transitionTimeMS.toString() + 'ms';
            this.img1.classList.toggle('ngx-img-crossfader-transparent');
            this.img2.classList.toggle('ngx-img-crossfader-transparent');
        }
    }
    /**
     * @param {?} imgNum
     * @return {?}
     */
    getSrc(imgNum) {
        if (imgNum < this.imageSources.length) {
            return this.imageSources[imgNum];
        }
        else {
            if (this.imageSources.length) {
                return this.imageSources[0];
            }
            else {
                return null;
            }
        }
    }
    /**
     * @return {?}
     */
    getImg1Num() { return this.img1Num; }
    /**
     * @return {?}
     */
    getImg2Num() { return this.img2Num; }
}
NgxImgCrossfaderComponent.decorators = [
    { type: Component, args: [{
                selector: 'ngx-img-crossfader',
                template: `
    <div class="ngx-img-crossfader-div" #bkgCrossfaderDiv>
      <img class="ngx-img-crossfader-img" [src]="getSrc(getImg1Num())" #bkgCrossfaderImg1>
      <img class="ngx-img-crossfader-img ngx-img-crossfader-transparent" [src]="getSrc(getImg2Num())" #bkgCrossfaderImg2>
    </div>
  `
            }] }
];
/** @nocollapse */
NgxImgCrossfaderComponent.ctorParameters = () => [];
NgxImgCrossfaderComponent.propDecorators = {
    initDelayMS: [{ type: Input }],
    idleTimeMS: [{ type: Input }],
    transitionTimeMS: [{ type: Input }],
    autoAdvance: [{ type: Input }],
    imageSources: [{ type: Input }],
    backgroundColor: [{ type: Input }],
    bkgCrossfaderDiv: [{ type: ViewChild, args: ['bkgCrossfaderDiv',] }],
    bkgCrossfaderImg1: [{ type: ViewChild, args: ['bkgCrossfaderImg1',] }],
    bkgCrossfaderImg2: [{ type: ViewChild, args: ['bkgCrossfaderImg2',] }]
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgxImgCrossfaderModule {
}
NgxImgCrossfaderModule.decorators = [
    { type: NgModule, args: [{
                declarations: [NgxImgCrossfaderComponent],
                imports: [],
                exports: [NgxImgCrossfaderComponent]
            },] }
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { NgxImgCrossfaderComponent, NgxImgCrossfaderModule };

//# sourceMappingURL=ngx-img-crossfader.js.map